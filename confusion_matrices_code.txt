        # Matrices de confusi√≥n calculadas con datos reales
        confusion_matrices = {
            'CNN Simple': np.array([
[ 10,   0,   0,   0,   0,   0,   0,   0,   0],
                                  [  0,  10,   0,   0,   0,   0,   0,   0,   0],
                                  [  0,   7,   1,   0,   0,   2,   0,   0,   0],
                                  [  0,   0,   0,  10,   0,   0,   0,   0,   0],
                                  [  1,   0,   0,   0,   1,   1,   1,   0,   6],
                                  [  0,   0,   2,   0,   0,   8,   0,   0,   0],
                                  [  0,   0,   0,   0,   4,   4,   1,   1,   0],
                                  [  0,   0,   0,   0,   0,   4,   2,   1,   3],
                                  [  0,   2,   0,   0,   0,   8,   0,   0,   0]]),
            'ResNet50V2': np.array([
[  0,   0,   3,   0,   0,   0,   4,   2,   1],
                                  [  1,   0,   2,   0,   0,   4,   3,   0,   0],
                                  [  0,   0,   2,   0,   3,   4,   0,   1,   0],
                                  [  0,   0,   0,   0,   3,   0,   7,   0,   0],
                                  [  0,   0,   1,   0,   1,   0,   8,   0,   0],
                                  [  1,   0,   0,   0,   0,   6,   3,   0,   0],
                                  [  0,   0,   0,   0,   2,   7,   1,   0,   0],
                                  [  0,   0,   1,   1,   1,   3,   4,   0,   0],
                                  [  0,   0,   0,   0,   2,   5,   3,   0,   0]]),
            'MobileNetV2 Base': np.array([
[ 10,   0,   0,   0,   0,   0,   0,   0,   0],
                                  [  0,  10,   0,   0,   0,   0,   0,   0,   0],
                                  [  0,   0,   9,   0,   0,   1,   0,   0,   0],
                                  [  0,   0,   0,  10,   0,   0,   0,   0,   0],
                                  [  2,   0,   0,   0,   8,   0,   0,   0,   0],
                                  [  0,   0,   0,   0,   0,   9,   0,   1,   0],
                                  [  0,   0,   0,   1,   0,   0,   9,   0,   0],
                                  [  0,   0,   0,   0,   0,   4,   0,   6,   0],
                                  [  0,   0,   0,   0,   0,   0,   1,   0,   9]]),
            'Hybrid Attention': np.array([
[  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10]]),
            'Hybrid Autoencoder': np.array([
[  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10],
                                  [  0,   0,   0,   0,   0,   0,   0,   0,  10]]),
        }

        # Accuracies reales calculadas
        accuracies = {
            'CNN Simple': 0.4667,  # 46.67%
            'ResNet50V2': 0.1111,  # 11.11%
            'MobileNetV2 Base': 0.8889,  # 88.89%
            'Hybrid Attention': 0.1111,  # 11.11%
            'Hybrid Autoencoder': 0.1111,  # 11.11%
        }

        # Losses estimadas (basadas en accuracy)
        losses = {
            'CNN Simple': 1.0667,
            'ResNet50V2': 1.7778,
            'MobileNetV2 Base': 0.2222,
            'Hybrid Attention': 1.7778,
            'Hybrid Autoencoder': 1.7778,
        }